/*=========================================================================================*/
/*                          This file was generated by "translater".                       */
/*=========================================================================================*/


static void bitcnt(DisasContext *ctx, TCGv r0, TCGv a0, TCGv a1);

static void bitcnt(DisasContext *ctx, TCGv r0, TCGv a0, TCGv a1) {
	TCGLabel *label_BB0_1 = gen_new_label();
	TCGLabel *label_BB0_2 = gen_new_label();
	TCGLabel *label_BB0_3 = gen_new_label();
	TCGLabel *label_BB0_4 = gen_new_label();
	TCGLabel *label_BB0_5 = gen_new_label();
	TCGLabel *label_BB0_6 = gen_new_label();
	TCGLabel *label_BB0_7 = gen_new_label();
	TCGLabel *label_BB0_8 = gen_new_label();
	TCGLabel *end_label = gen_new_label();

	TCGv tmp1 = tcg_temp_new();
	TCGv tmp2 = tcg_temp_new();

	TCGv sp[3]; for(int i = 0; i < 3; ++i) { sp[i] = tcg_temp_new(); }

	tcg_gen_mov_tl(sp[2], a0);
	tcg_gen_mov_tl(sp[1], a1);
	tcg_gen_movi_tl(tmp1, 0);
	tcg_gen_mov_tl(sp[0], tmp1);
	tcg_gen_brcondi_tl(TCG_COND_ALWAYS, ctx->zero, 0, label_BB0_1);
	
	gen_set_label(label_BB0_1);
	tcg_gen_mov_tl(tmp1, sp[2]);
	tcg_gen_brcondi_tl(TCG_COND_EQ, tmp1, 0, label_BB0_4);
	tcg_gen_brcondi_tl(TCG_COND_ALWAYS, ctx->zero, 0, label_BB0_2);
	
	gen_set_label(label_BB0_2);
	tcg_gen_mov_tl(tmp1, sp[2]);
	tcg_gen_andi_tl(tmp1, tmp1, 1);
	tcg_gen_mov_tl(tmp2, sp[0]);
	tcg_gen_add_tl(tmp1, tmp2, tmp1);
	tcg_gen_mov_tl(sp[0], tmp1);
	tcg_gen_brcondi_tl(TCG_COND_ALWAYS, ctx->zero, 0, label_BB0_3);
	
	gen_set_label(label_BB0_3);
	tcg_gen_mov_tl(tmp1, sp[2]);
	tcg_gen_shri_tl(tmp1, tmp1, 1);
	tcg_gen_mov_tl(sp[2], tmp1);
	tcg_gen_brcondi_tl(TCG_COND_ALWAYS, ctx->zero, 0, label_BB0_1);
	
	gen_set_label(label_BB0_4);
	tcg_gen_brcondi_tl(TCG_COND_ALWAYS, ctx->zero, 0, label_BB0_5);
	
	gen_set_label(label_BB0_5);
	tcg_gen_mov_tl(tmp1, sp[1]);
	tcg_gen_brcondi_tl(TCG_COND_EQ, tmp1, 0, label_BB0_8);
	tcg_gen_brcondi_tl(TCG_COND_ALWAYS, ctx->zero, 0, label_BB0_6);
	
	gen_set_label(label_BB0_6);
	tcg_gen_mov_tl(tmp1, sp[1]);
	tcg_gen_andi_tl(tmp1, tmp1, 1);
	tcg_gen_mov_tl(tmp2, sp[0]);
	tcg_gen_add_tl(tmp1, tmp2, tmp1);
	tcg_gen_mov_tl(sp[0], tmp1);
	tcg_gen_brcondi_tl(TCG_COND_ALWAYS, ctx->zero, 0, label_BB0_7);
	
	gen_set_label(label_BB0_7);
	tcg_gen_mov_tl(tmp1, sp[1]);
	tcg_gen_shri_tl(tmp1, tmp1, 1);
	tcg_gen_mov_tl(sp[1], tmp1);
	tcg_gen_brcondi_tl(TCG_COND_ALWAYS, ctx->zero, 0, label_BB0_5);
	
	gen_set_label(label_BB0_8);
	tcg_gen_mov_tl(r0, sp[0]);
	tcg_gen_brcondi_tl(TCG_COND_ALWAYS, ctx->zero, 0, end_label);

	gen_set_label(end_label);
}

static bool trans_bitcnt(DisasContext *ctx, arg_bitcnt *a) {
	TCGLabel *label0 = gen_new_label();
	TCGLabel *label1 = gen_new_label();
	TCGLabel *label2 = gen_new_label();
	TCGLabel *label3 = gen_new_label();

	TCGv rd = get_gpr(ctx, a->rd, EXT_NONE);
	TCGv rs1 = get_gpr(ctx, a->rs1, EXT_NONE);
	TCGv rs2 = get_gpr(ctx, a->rs2, EXT_NONE);

	TCGv tmp0 = tcg_temp_new();
	TCGv a0 = tcg_temp_new();
	TCGv a1 = tcg_temp_new();
	TCGv r0 = tcg_temp_new();
	tcg_gen_movi_tl(r0, 0);

	tcg_gen_setcondi_tl(TCG_COND_EQ, tmp0, rs1, 100);
	tcg_gen_brcondi_tl(TCG_COND_EQ, tmp0, 0, label0);
	tcg_gen_movi_tl(rd, 0);

	gen_set_label(label1);
	tcg_gen_setcondi_tl(TCG_COND_NE, tmp0, rd, 100);
	tcg_gen_brcondi_tl(TCG_COND_EQ, tmp0, 0, label2);
	tcg_gen_addi_tl(rd, rd, 1);
	tcg_gen_brcondi_tl(TCG_COND_ALWAYS, ctx->zero, 0, label1);

	gen_set_label(label2);
	tcg_gen_brcondi_tl(TCG_COND_ALWAYS, ctx->zero, 0, label3);

	gen_set_label(label0);
	tcg_gen_mov_tl(a0, rs1);
	tcg_gen_mov_tl(a1, rs2);
	bitcnt(ctx, r0, a0, a1);
	tcg_gen_mov_tl(tmp0, r0);
	tcg_gen_mov_tl(rd, tmp0);

	gen_set_label(label3);
	return true;
}

